/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as WorkIndexRouteImport } from './routes/work/index'
import { Route as TechStackIndexRouteImport } from './routes/tech-stack/index'
import { Route as ProjectsIndexRouteImport } from './routes/projects/index'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const WorkIndexRoute = WorkIndexRouteImport.update({
  id: '/work/',
  path: '/work/',
  getParentRoute: () => rootRouteImport,
} as any)
const TechStackIndexRoute = TechStackIndexRouteImport.update({
  id: '/tech-stack/',
  path: '/tech-stack/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsIndexRoute = ProjectsIndexRouteImport.update({
  id: '/projects/',
  path: '/projects/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/projects': typeof ProjectsIndexRoute
  '/tech-stack': typeof TechStackIndexRoute
  '/work': typeof WorkIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/projects': typeof ProjectsIndexRoute
  '/tech-stack': typeof TechStackIndexRoute
  '/work': typeof WorkIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/projects/': typeof ProjectsIndexRoute
  '/tech-stack/': typeof TechStackIndexRoute
  '/work/': typeof WorkIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/projects' | '/tech-stack' | '/work'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/projects' | '/tech-stack' | '/work'
  id: '__root__' | '/' | '/projects/' | '/tech-stack/' | '/work/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProjectsIndexRoute: typeof ProjectsIndexRoute
  TechStackIndexRoute: typeof TechStackIndexRoute
  WorkIndexRoute: typeof WorkIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/work/': {
      id: '/work/'
      path: '/work'
      fullPath: '/work'
      preLoaderRoute: typeof WorkIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tech-stack/': {
      id: '/tech-stack/'
      path: '/tech-stack'
      fullPath: '/tech-stack'
      preLoaderRoute: typeof TechStackIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/': {
      id: '/projects/'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProjectsIndexRoute: ProjectsIndexRoute,
  TechStackIndexRoute: TechStackIndexRoute,
  WorkIndexRoute: WorkIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
